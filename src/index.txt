a_pre/Frame.thy ========================================

a_pre/Key_value.thy ========================================
(* 'k ord, kv ops --------------------------------------------------- *)
(* key ordering, generic defns key_lt etc --------------------------- *)
(* ordererd key list ------------------------------------------------ *)
(* check keys ------------------------------------------------------- *)
(* insert and delete in list of kv ---------------------------------- *)
(* search_key_to_index ---------------------------------------------- *)
(* split_ks_rs ------------------------------------------------------ *)
(* insert aux funs: split_leaf and split_node ----------------------- *)

a_pre/Prelude.thy ========================================
(* min/max size constants ------------------------------------------- *)
(* small node or leaf ----------------------------------------------- *)
(* transition systems ----------------------------------------------- *)

a_pre/Pre.thy ========================================

a_pre/Todo.thy ========================================

a_pre/Util.thy ========================================
(* failwith --------------------------------------------------------- *)
(* debugging, asserts ----------------------------------------------- *)
(* a single error type, for all proof-relevant errors --------------- *)
(* misc ------------------------------------------------------------- *)
(* res -------------------------------------------------------------- *)
(* various list defs, split_at etc ---------------------------------- *)
(* iterate f:'a -> 'a option ---------------------------------------- *)

a_tree/Tree_stack.thy ========================================
(* treestack ts_frame ----------------------------------------------- *)
(* stack of frames -------------------------------------------------- *)
(* stack_to_lu_of_child (get bounds of focus) ----------------------- *)
(* tree_to_stack, stack_to_tree, no_focus --------------------------- *)
(* add_new_stk_frame; r_stk_to_rs ----------------------------------- *)

a_tree/Tree.thy ========================================
(* tree algebraic datatype ------------------------------------------ *)
(* util ------------------------------------------------------------- *)
(* height ----------------------------------------------------------- *)
(* to subtrees ------------------------------------------------------ *)
(* balanced --------------------------------------------------------- *)
(* get min size ----------------------------------------------------- *)
(* wf size, ie respects min/max bounds ------------------------------ *)
(* wf_ks_rs, ie |rs|=|ks|+1 ----------------------------------------- *)
(* keys in tree (nodes and leaves) ---------------------------------- *)
(* keys consistent ie node keys bounds subtrees --------------------- *)
(* keys_ordered ie in nodes and leaves the keys are sorted ---------- *)
(* wellformed_tree -------------------------------------------------- *)
(* tree_to_leaves, tree_to_map etc ---------------------------------- *)

b_params/Params.thy ========================================
(* ('a,'t) MM type_synonym ------------------------------------------ *)
(* params ----------------------------------------------------------- *)

b_params/Pre_params.thy ========================================
(* mk_r2t ----------------------------------------------------------- *)

b_store_monad/Monad.thy ========================================
(* monad ------------------------------------------------------------ *)

d_find_ins_del/Delete.thy ========================================
(* steal or merge --------------------------------------------------- *)
(* delete ----------------------------------------------------------  *)
(* wellformedness --------------------------------------------------- *)

d_find_ins_del/Find.thy ========================================
(* find ------------------------------------------------------------- *)
(* wellformedness --------------------------------------------------- *)
(* testing ---------------------------------------------------------- *)

d_find_ins_del/Insert_many.thy ========================================
(* defns ------------------------------------------------------------ *)

d_find_ins_del/Insert.thy ========================================
(* defns ------------------------------------------------------------ *)
(* wellformedness --------------------------------------------------- *)

d_find_ins_del/Leaf_stream.thy ========================================
(* leaf stream types ------------------------------------------------ *)

e_export/Export_code.thy ========================================

